from typing import Protocol, Sequence

from ..domain.permission import Permission, PermissionId
from ..domain.role import Role, RoleId
from ..domain.token import RefreshTokenId
from ..domain.user import User, UserId


class UserRepository(Protocol):
    async def find_by_refresh_token(self, refresh_token: str) -> User | None: ...
    async def find_by_refresh_token_id(
        self, refresh_token_id: RefreshTokenId
    ) -> User | None: ...
    async def find_by_id(self, id: UserId) -> User | None: ...
    async def find_by_email(self, email: str) -> User | None: ...
    async def save(self, user: User) -> None: ...
    async def update(self, user: User) -> None: ...
    async def delete(self, user_id: UserId) -> None: ...
    async def get_user_roles(self, user_id: UserId) -> Sequence[Role]: ...
    async def get_user_permissions(self, user_id: UserId) -> Sequence[Permission]: ...
    async def add_role(self, user: User, role: Role) -> None: ...
    async def remove_role(self, user: User, role: Role) -> None: ...
    async def save_role(self, role: Role) -> None: ...
    async def find_role_by_id(self, role_id: RoleId) -> Role: ...
    async def find_permission_by_id(
        self, permission_id: PermissionId
    ) -> Permission: ...
